name: Maintenance

on:
  schedule:
    - cron: '0 0 * * 1'  # Run weekly on Monday at midnight
  workflow_dispatch:

jobs:
  dependency-updates:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
      
      - name: Install pip-tools
        run: |
          python -m pip install --upgrade pip
          pip install pip-tools
      
      - name: Check for dependency updates
        run: |
          pip-compile --upgrade requirements.txt
      
      - name: Create Pull Request for dependency updates
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: update dependencies"
          title: "chore: update dependencies"
          body: |
            This PR updates dependencies to their latest versions.
            
            Auto-generated by the Maintenance workflow.
          branch: dependency-updates
          base: main
  
  security-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install bandit safety
      
      - name: Run Bandit security scan
        run: bandit -r . -x tests/
      
      - name: Check for vulnerable dependencies
        run: safety check
  
  cleanup-old-resources:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Clean up old resources
        run: |
          echo "Resource cleanup would run here"
          echo "Skipping cleanup as cleanup_aws_resources.py not available"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
          ENVIRONMENT: dev