<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>GenAI Pipeline UI</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
            line-height: 1.6;
        }
        h1 {
            color: #0066cc;
            text-align: center;
        }
        .container {
            display: flex;
            flex-direction: column;
            gap: 20px;
        }
        textarea {
            width: 100%;
            height: 150px;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
            font-family: inherit;
            font-size: 16px;
        }
        button {
            background-color: #0066cc;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 4px;
            cursor: pointer;
            font-size: 16px;
            transition: background-color 0.3s;
        }
        button:hover {
            background-color: #0052a3;
        }
        .result {
            border: 1px solid #ccc;
            border-radius: 4px;
            padding: 15px;
            background-color: #f9f9f9;
            min-height: 200px;
            white-space: pre-wrap;
        }
        .loading {
            text-align: center;
            font-style: italic;
            color: #666;
        }
        .error {
            color: #cc0000;
            font-weight: bold;
        }
        .stats {
            display: flex;
            justify-content: space-between;
            font-size: 14px;
            color: #666;
            margin-top: 10px;
        }
    </style>
</head>
<body>
    <h1>GenAI Pipeline UI</h1>
    <div class="container">
        <div>
            <label for="prompt">Enter your prompt:</label>
            <textarea id="prompt" placeholder="What is artificial intelligence?"></textarea>
        </div>
        <div>
            <button id="submit">Generate Response</button>
        </div>
        <div>
            <h3>Response:</h3>
            <div id="result" class="result">Results will appear here...</div>
            <div class="stats">
                <span id="tokens">Tokens: -</span>
                <span id="time">Time: -</span>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const promptInput = document.getElementById('prompt');
            const submitButton = document.getElementById('submit');
            const resultDiv = document.getElementById('result');
            const tokensSpan = document.getElementById('tokens');
            const timeSpan = document.getElementById('time');
            
            // API endpoint URL
            const apiUrl = 'https://cr7c7lxj5mt2lwvyi57s2o6arq0paars.lambda-url.us-east-1.on.aws/';
            
            submitButton.addEventListener('click', async function() {
                const prompt = promptInput.value.trim();
                
                if (!prompt) {
                    resultDiv.innerHTML = '<span class="error">Please enter a prompt</span>';
                    return;
                }
                
                // Show loading state
                resultDiv.innerHTML = '<div class="loading">Generating response...</div>';
                submitButton.disabled = true;
                
                // Record start time
                const startTime = new Date();
                
                try {
                    // Use a CORS proxy if needed
                const useProxy = true;
                const proxyUrl = 'https://cors-anywhere.herokuapp.com/';
                const fetchUrl = useProxy ? proxyUrl + apiUrl : apiUrl;
                
                const response = await fetch(fetchUrl, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'Origin': window.location.origin
                        },
                        body: JSON.stringify({ prompt })
                    });
                    
                    const data = await response.json();
                    
                    // Calculate elapsed time
                    const endTime = new Date();
                    const elapsedTime = (endTime - startTime) / 1000;
                    
                    if (data.inference_complete) {
                        resultDiv.textContent = data.result;
                        
                        // Estimate tokens (rough approximation)
                        const promptTokens = Math.ceil(prompt.length / 4);
                        const responseTokens = Math.ceil(data.result.length / 4);
                        tokensSpan.textContent = `Tokens: ~${promptTokens + responseTokens} (${promptTokens} in, ${responseTokens} out)`;
                        
                        timeSpan.textContent = `Time: ${elapsedTime.toFixed(2)}s`;
                    } else {
                        resultDiv.innerHTML = `<span class="error">Error: ${data.error || 'Unknown error'}</span>`;
                    }
                } catch (error) {
                    resultDiv.innerHTML = `<span class="error">Error: ${error.message}</span>`;
                } finally {
                    submitButton.disabled = false;
                }
            });
            
            // Allow submitting with Enter key
            promptInput.addEventListener('keydown', function(event) {
                if (event.key === 'Enter' && event.ctrlKey) {
                    submitButton.click();
                }
            });
        });
    </script>
</body>
</html>